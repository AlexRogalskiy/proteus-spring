plugins {
    id 'io.spring.dependency-management'
}

project.description = 'Netifi Spring Boot Autoconfigure'

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootDependenciesVersion}"
        mavenBom "com.netifi:netifi-bom:${version}"
    }
}

dependencies {
    compile project(":netifi-spring-core")

    compile "com.netifi:netifi-broker-client"
    compile "com.netifi:netifi-discovery"

    compile 'org.slf4j:slf4j-api'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    compile 'io.opentracing:opentracing-api'
    compile 'io.micrometer:micrometer-core'
    
    compileClasspath "com.netifi:netifi-tracing-openzipkin"
    compileClasspath "com.netifi:netifi-metrics-micrometer"
    compileClasspath "com.netifi:netifi-discovery-aws"
    compileClasspath "com.netifi:netifi-discovery-consul"
    compileClasspath "com.netifi:netifi-discovery-kubernetes"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor"

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.mockito:mockito-core'
    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testCompile 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    useJUnitPlatform()
}