plugins {
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'maven-publish'
}

ext.description = "Netifi Proteus Spring Starter"
ext.artifactName = 'proteus-spring-boot-starter'

apply from: "${project.rootProject.projectDir}/gradle/java.gradle"
apply from: "${project.rootProject.projectDir}/artifactory.gradle"
apply from: "${project.rootProject.projectDir}/bintray.gradle"

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootDependenciesVersion}"
        mavenBom "io.netifi.proteus:proteus-bom:${proteusVersion}"
    }
}

dependencies {
    compile project(':proteus-spring-boot-autoconfigure')
    compile project(':proteus-spring-core')

    compile 'org.springframework.boot:spring-boot-starter'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Netifi Proteus Spring Starter'
                description = 'A bill of materials for Netifi Spring applications'
                url = 'https://www.netifi.com'

                organization {
                    name = 'Netifi, Inc.'
                    url = 'https://www.netifi.com'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                scm {
                    url = 'https://github.com/netifi-proteus/proteus-spring'
                    connection = 'scm:git:git://github.com/netifi-proteus/proteus-spring'
                    developerConnection = 'scm:git:git://github.com/netifi-proteus/proteus-spring'
                }

                issueManagement {
                    system = "GitHub Issues"
                    url = "https://github.com/netifi-proteus/proteus-spring/issues"
                }
            }
        }
    }
}
